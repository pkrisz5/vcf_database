apiVersion: batch/v1
kind: Job
metadata:
  name: migration
spec:
  template:
    metadata:
      name: migration
    spec:
      initContainers:
      - name: job-staging
        image: postgres:11.12
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-admin-ebi
              key: adminpw
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pg-admin-ebi
              key: admin
        volumeMounts:
          - name: nfs
            mountPath: /volume
            subPath: transfer
        command: ["/bin/sh"]
        args: [ "-c", "pg_dump -Fc -U ${POSTGRES_USER} -h postgres-kooplex-staging -p 5431 --verbose
                --file=/volume/pg_staging_backup.dump kooplex_ebi" ]
      - name: job-prod
        image: postgres:11.12
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-admin-ebi
              key: adminpw
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pg-admin-ebi
              key: admin
        volumeMounts:
          - name: nfs
            mountPath: /volume
            subPath: transfer
        command: ["/bin/sh"]
        args: [ "-c", "pg_restore -U ${POSTGRES_USER} -h postgres-kooplex-prod -p 5433 -d kooplex_ebi --clean --if-exists
                --single-transaction --verbose /volume/pg_staging_backup.dump" ]
      containers:
      - name: job-migration
        image: alpine:3.14
        command: ['sh', '-c', 'echo "job-staging and job-prod completed"']
      restartPolicy: Never
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: pvc-postgres-ssd
  backoffLimit: 0
